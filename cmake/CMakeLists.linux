cmake_minimum_required(VERSION 3.28)

set(CMAKE_CUDA_ARCHITECTURES 60 61 62 70 72 75 86 89 90)
set(CMAKE_CUDA_COMPILER /usr/local/cuda-12.8/bin/nvcc)

project(tensorrt CUDA CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CUDA_STANDARD 17)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

find_package(OpenCV REQUIRED)
set(TensorRT_DIR /home/autumn/Documents/CUDA/TensorRT-10.9.0.34)
set(CUDA_DIR /usr/local/cuda-12.8)

include_directories(
        ${OpenCV_INCLUDE_DIRS}
        ${TensorRT_DIR}/include
        ${TensorRT_DIR}/samples/common
        ${CUDA_DIR}/include
)

link_directories(
        ${TensorRT_DIR}/lib
        ${CUDA_DIR}/lib64
)

set(LIBS
        ${OpenCV_LIBS}
        libnvinfer.so.10
        libcuda.so
        libcudart.so
)

#add_library(${PROJECT_NAME} SHARED
#        src/BaseMemory.cpp
#        src/Infer.cpp
#        src/Logger.cpp
#        src/DetectPostprocess.cu
#        src/Preprocess.cu
#        src/Timer.cpp
#        src/Yolo.cpp
#        workspace/export/ExportMultiple.cpp
#        workspace/export/ExportMultipleCpm.cpp
#        workspace/export/ExportSingle.cpp
#        workspace/export/ExportSingleCpm.cpp
#)

add_executable(${PROJECT_NAME}
        src/BaseMemory.cpp
        src/Infer.cpp
        src/Logger.cpp
        src/DetectPostprocess.cu
        src/Preprocess.cu
        src/Timer.cpp
        src/Yolo.cpp
        workspace/example/Config.h
        workspace/example/Main.cpp
        workspace/example/Multi.cpp
)

set_target_properties(${PROJECT_NAME} PROPERTIES
        CUDA_SEPARABLE_COMPILATION ON)

target_link_libraries(${PROJECT_NAME} ${LIBS})