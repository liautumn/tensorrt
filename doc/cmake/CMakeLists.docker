cmake_minimum_required(VERSION 3.22.1)

set(CMAKE_CUDA_ARCHITECTURES 60 61 62 70 72 75 86 89 90)
set(CMAKE_CUDA_COMPILER /usr/local/cuda-12.8/bin/nvcc)

project(tensorrt CUDA CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CUDA_STANDARD 17)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cu
)

find_package(OpenCV REQUIRED)
set(TensorRT_DIR /tmp/TensorRT-10.9.0.34)
set(CUDA_DIR /usr/local/cuda-12.8)

include_directories(
        ${OpenCV_INCLUDE_DIRS}
        ${TensorRT_DIR}/include
        ${TensorRT_DIR}/samples/common
        ${CUDA_DIR}/include
)

link_directories(
        /usr/include/x86_64-linux-gnu
        ${CUDA_DIR}/lib64
)

#add_library(${PROJECT_NAME} SHARED
#        ${SOURCES}
#        workspace/export/export_multiple.cpp
#        workspace/export/export_multiple_cpm.cpp
#        workspace/export/export_single.cpp
#        workspace/export/export_single_cpm.cpp
#)

add_executable(${PROJECT_NAME}
        ${SOURCES}
        workspace/example/main.cpp
)

set_target_properties(${PROJECT_NAME} PROPERTIES
        CUDA_SEPARABLE_COMPILATION ON)

target_link_libraries(${PROJECT_NAME}
        ${OpenCV_LIBS}
        libnvinfer.so.10
        libcuda.so
        libcudart.so
)